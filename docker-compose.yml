version: '3.5'
services:
  client:
    container_name: client
    restart: always
    build:
      context: .
      dockerfile: ./client/Dockerfile
    ports:
      - 8080:8080
    environment: 
      CLIENT_ENV: ${CLIENT_ENV}
    env_file: .env
    entrypoint: ["sh", "./client/scripts/start.sh"]
    volumes:
      - .:/client
      - yarn_cache:/client/node_modules
    networks:
      - app-network
  api:
    container_name: api
    restart: always
    build: 
      context: .
      dockerfile: ./api/Dockerfile
    ports: 
      - "8000:8000"
    env_file: .env
    volumes:
      - ./api:/api
    depends_on:
      - db
    command: >
      sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    networks:
        - app-network

  db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=mydb
      - POSTGRES_HOST=localhost
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes:
      - postgres_data:/var/lib/postgresql/data/
networks:
  app-network:
    external: true

volumes:
  yarn_cache:
  postgres_data:
